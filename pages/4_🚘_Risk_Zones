import streamlit as st
import pandas as pd
import folium
from streamlit_folium import st_folium

st.set_page_config(page_title="Risk Zones", page_icon="ðŸš˜")

st.markdown("# Risk Zones")
st.write(
    """

We developed a predictive tool using an **XGBoost model** to classify road accident risk zones across France based on **weather and visibility conditions**. This interactive map allows users to visualize and assess the severity of predicted road accidents under different environmental scenarios. 

**Key Steps**:

1. **Risk Zone Creation**:
   - **Accident Coordinates**: Each accident's location (latitude and longitude) was used to define its zone.
   - **Geographical Filtering**: Accidents within mainland France were kept by limiting coordinates to specific boundaries (Lat: 42.0 - 51.0, Long: -5.0 - 10.0).
   - **Zone Calculation**: For each accident, four coordinates were created by rounding lat/long values, forming rectangular risk zones (~11.11 km x 8.29 km). The map was divided into **8219 risk zones**.
\n
2. **Accident Severity Prediction**:
   - **Model Prediction**: XGBoost predicted the accident severity within each risk zone.
   - **Weather/Visibility Conditions**: Accidents were categorized into five conditionsâ€”**Normal**, **Light rain**, **Gloomy/adverse weather**, **Difficult vision**, and **Other**â€”based on weather/vision data.
   - **Data Aggregation**: Average severity was calculated for each zone under each weather condition.
\n
3. **Interactive Map Visualization**:
   - **Folium Map**: The risk zones were displayed using rectangles, where the **opacity** represents the **predicted severity** (darker colors indicate higher risk).
   - **Layering by Conditions**: The map includes layers for each weather condition, allowing users to toggle and view predicted severities under different environmental factors.

This tool provides a powerful, intuitive way to visualize how weather and visibility impact road safety, helping with **preventive measures** and **decision-making**.
\n
"""
)
st.markdown('**Map of France divided into risk zones for road accident severity (higher % equals higher risk)**')


df_risk_zones = pd.read_pickle('model_results/xgb_binary_target/risk_zones.xz')
# https://matplotlib.org/stable/gallery/color/named_colors.html
center_of_france = [46.71109, 1.7191036]

m = folium.Map(location=center_of_france, zoom_start=5, tiles=None)

# Manually adding the background map so it's always displayed when switching between different layers
folium.TileLayer('openstreetmap', name='Background Map (openstreetmap)', overlay=True).add_to(m)

for weather in df_risk_zones['condition'].unique():
    fg = folium.FeatureGroup(name=weather.capitalize(), overlay=False)

    # Filter df3 for the current weather condition
    df_filtered = df_risk_zones[df_risk_zones['condition'] == weather]

    for _, row in df_filtered.iterrows():
        # Create a rectangle with the defined bounds
        rectangle = folium.Rectangle(
            bounds=row['bounds'],
            color='#122B54',
            weight=0.2,
            #fill=False,
            #fill_color='#006192',
            fill_color='#006192',
            fill_opacity=row['yhat'],
            tooltip="<strong>Å· = %.0f%%</strong>" % (row['yhat'] * 100)
            ).add_to(fg)

    # Add the feature group to the map
    fg.add_to(m)

# Add a LayerControl to switch between different weather conditions
folium.LayerControl(collapsed=True).add_to(m)

# Display the map with the rectangles in Streamlit

st_folium(m, width=700, height=500))